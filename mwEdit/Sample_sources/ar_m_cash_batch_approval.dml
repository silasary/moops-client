TITLE AR_M_002,"Cash Batch Approval"

FORM BATCH_APPROVAL /ROW=3 /COL=2 /HEIGHT=21 /WIDTH=78 &
      /TITLE=(MESSAGE("P_20141"))


      BEGIN_BLOCK REGISTRATION
            PERFORM "GEMLB:INT_LB_REGISTRATION" (%FORM_FILE, #INT_VERSION)
      END_BLOCK

      BEGIN_BLOCK PARAM_READ
            START_TRANSACTION
            #COMPANY_CODE   = PARAMETER("USER_COMPANY_CODE")
            #SECURITY_ACTIVE= PARAMETER("COMPANY_SECURITY_ACTIVE")
            #CASH_SALES     = PARAMETER("USER_CASH_SALES")
            #YES = PARAMETER("LANGUAGE_YES")
            #CURRENCY_LEN = PARAMETER("SYS_CURRENCY_LENGTH")

            IF  (#SECURITY_ACTIVE = #YES)
                  FIND IN SECURITY_TRAN_TYPES_VT &
                        /WITH=SOURCE_MODULE=(PARAMETER("MODULE_AR")) &
                        /WITH=SECURITY_TRANSACTION_TYPE=(PARAMETER("TTYPE_CR")) &
                        /WITH=CREATE_TRANSACTIONS=#YES

                  IF  (%STATUS = %FAILURE)
                        MESSAGE/IDENTIFIER/BELL/WAIT P_00897,PARAMETER("TTYPE_CR")
                        EXIT
                  END_IF
            END_IF
      END_BLOCK

      BEGIN_BLOCK DIVISION
            INPUT_BLOCK  /ROW=2 /COL=30 &
                  /PROMPT=(FIELD_PROMPT(DIVISION)) &
                  /TARGET=#DIVISION &
                  /USING=AR_CONTROLS(DIVISION) &
                  /LOV=SECURITY_PERIOD_ACCESS_VT(SYS_ACCESS_CODE,CODE_DESCRIPTION) &
                  /LOV_WITH=SYS_ACCESS_TYPE=(PARAMETER("ACCESS_TYPE_DIVISION")) &
                  /LOV_WITH=SOURCE_MODULE=(PARAMETER("MODULE_AR")) &
                  /LOV_WITH=SYS_ALLOW_ACCESS=#YES

            FIND IN AR_CONTROLS &
                  /LOCK=NONE &
                  /WITH=COMPANY_CODE=#COMPANY_CODE &
                  /WITH=DIVISION=#DIVISION

            IF  (%STATUS = %FAILURE)
                MESSAGE/IDENTIFIER/BELL/WAIT P_00354
                GOTO DIVISION
            END_IF

            FIND IN SECURITY_PERIOD_ACCESS_VT &
                  /WITH=SYS_ACCESS_TYPE=(PARAMETER("ACCESS_TYPE_DIVISION")) &
                  /WITH=SYS_ACCESS_CODE= #DIVISION &
                  /WITH=SOURCE_MODULE=(PARAMETER("MODULE_AR"))

            IF  (%STATUS = %FAILURE)
                MESSAGE/IDENTIFIER/BELL/WAIT P_00447
                GOTO DIVISION
            END_IF

            IF  (SECURITY_PERIOD_ACCESS_VT(SYS_ALLOW_ACCESS) <> #YES)
                MESSAGE/IDENTIFIER/BELL/WAIT P_00756
                GOTO DIVISION
            END_IF

            #DIVISION         = AR_CONTROLS(DIVISION)
            #CURRENCY_METHOD  = AR_CONTROLS(SYS_CURRENCY_METHOD)
            #BASE_CURRENCY_CODE     = AR_CONTROLS(SYS_CURRENCY_CODE)
            #DEF_AR_SHORT_CODE      = AR_CONTROLS(AR_SHORT_CODE)
            #DEF_AR_FULL_ACCOUNT    = AR_CONTROLS(AR_FULL_ACCOUNT)
            #DIV_TAX_ON_CASH  = AR_CONTROLS(SYS_TAX_ON_CASH)

            FIND IN SYS_CURRENCY_CODES &
                  /LOCK=NONE &
                  /WITH=SYS_CURRENCY_CODE=#BASE_CURRENCY_CODE

            IF    (%STATUS = %FAILURE)
                  MESSAGE/IDENTIFIER/BELL/WAIT P_82400
                  EXIT (%FAILURE)
            END_IF
            #BASE_CURRENCY_DECIMAL  = SYS_CURRENCY_CODES(SYS_CURRENCY_DECIMALS)
      END_BLOCK

      BEGIN_BLOCK SECURITY_CHECK_1
            IF  (#SECURITY_ACTIVE = #YES)

                FIND IN SECURITY_TRAN_TYPES_VT &
                        /WITH=SOURCE_MODULE=(PARAMETER("MODULE_AR")) &
                        /WITH=SECURITY_TRANSACTION_TYPE=(PARAMETER("TTYPE_CR"))

                IF  (%STATUS = %FAILURE  OR &
                      SECURITY_TRAN_TYPES_VT(CREATE_TRANSACTIONS) <> #YES)
                  MESSAGE/IDENTIFIER/BELL/WAIT P_22371
                  EXIT(%FAILURE)
                ELSE
                  #TRANSACTION_MAX = SECURITY_TRAN_TYPES_VT(MAXIMUM_VALUE)
                END_IF
            END_IF

            PERFORM "GEMLB:LB_SECURITY_ACCOUNT_CHECK" &
                              ((AR_CONTROLS(AR_SHORT_CODE)), &
                               (AR_CONTROLS(AR_FULL_ACCOUNT)), &
                               (PARAMETER("MODULE_AR")), &
                               (PARAMETER("TTYPE_CR")), &
                               MESSAGE("P_26002"),"","",#company_code)
            IF  (%STATUS = %FAILURE)  GOTO DIVISION
      END_BLOCK

      OUTPUT_BLOCK DISP_DIV /ROW=2 /COL=33 &
                  /SOURCE=(AR_CONTROLS(DIVISION_NAME))

      BEGIN_BLOCK CR_BATCH_NUMBER
            INPUT_BLOCK  /ROW=4 /COL=30 &
                  /PROMPT=(FIELD_PROMPT(CR_BATCH_NUMBER)) &
                  /TARGET=#BATCH_NUMBERS &
                  /TITLE=(FIELD_PROMPT(CR_BATCH_NUMBER)) &
                  /USING=CASH_RECEIPT_BATCH_HEADERS(CR_BATCH_NUMBER),MULTIPLE &
                  /LOV=CASH_RECEIPT_BATCH_HEADERS(CR_BATCH_NUMBER,BANK_CODE,BANK_DATE) &
                  /LOV_WITH=A.COMPANY_CODE=#COMPANY_CODE &
                  /LOV_WITH=A.DIVISION=AR_CONTROLS(DIVISION) &
                  /lOV_WITH=A.BATCH_CR_TOTAL=A.ENTERED_CASH_RECEIPT_TOTAL &
                  /LOV_WITH=A.STATUS_FLAG=(PARAMETER("STATUS_UPDATE"))

      END_BLOCK

      BEGIN_BLOCK PROCESS
            COMMIT
            PERFORM PROCESS_BATCH
            IF (%STATUS = %EMPTY OR %STATUS = %EXIT OR %STATUS = %BACK) GOTO DIVISION
      END_BLOCK
END_FORM

PROCEDURE_FORM PROCESS_BATCH

      BEGIN_BLOCK PROCESS
            PERFORM SHOW_BATCH_LINES
            IF (%STATUS = %EMPTY OR %STATUS = %EXIT OR %STATUS = %BACK) EXIT (%STATUS)
            COMMIT
      END_BLOCK

      MENU_BLOCK PRINT_SELECTION /ROW=12 /COL=26 &
                  /SOURCE=(MESSAGE("P_00731")) /NOREPEAT &
                  /ITEM=(MESSAGE("P_00731")),(MESSAGE("P_44255")),(#OPT="UPDATE") &
                  /ITEM=(MESSAGE("P_00067")),(MESSAGE("P_00087")),(#OPT="BATCH_UPDATE") &
                  /ITEM=(MESSAGE("P_00257")),(MESSAGE("P_00263")),(EXIT)

      BEGIN_BLOCK UPDATE
            IF (#OPT = "UPDATE")
                  PERFORM UPDATE_BATCHES
                  PERFORM "GEMAR:INT_AR_M_PROCESS_CASH_RB_ALLOCATIONS" ( &
                        #DIVISION, &
                        #BATCH_NUMBERS)
            END_IF
      END_BLOCK

      BEGIN_BLOCK BATCH
            IF (#OPT = "BATCH_UPDATE")
            PERFORM/BATCH 'GEMSYS:SYS_COMPANY_SETUP' BATCH_ENTRY ( &
                        #COMPANY_CODE, &
                        "GEMAR:AR_M_CASH_BATCH_APPROVAL", &
                        'BATCH_SETUP', &
                        #COMPANY_CODE,&
                         #DIVISION, &
                         #BATCH_NUMBERS, &
                         #TRANSACTION_MAX)
            END_IF
            EXIT
      END_BLOCK

END_FORM


PROCEDURE_FORM BATCH_SETUP (#C,#P1,#P2,#P3)


      BEGIN_BLOCK COMPANY_SETUP
            START_TRANSACTION

            #COMPANY_CODE= #C
            #DIVISION    = #P1
            #BATCH_NUMBERS=#P2
            #SECURITY_ACTIVE= PARAMETER('COMPANY_SECURITY_ACTIVE')
            #YES            = PARAMETER("LANGUAGE_YES")
            #CURRENCY_LEN = PARAMETER("SYS_CURRENCY_LENGTH")
            #TRANSACTION_MAX = #P3
            #CASH_SALES     = PARAMETER('USER_CASH_SALES')

            FIND IN AR_CONTROLS &
                  /WITH=COMPANY_CODE=#COMPANY_CODE &
                  /WITH=DIVISION=#DIVISION &
                  /LOCK=NONE

            IF (%STATUS<>%SUCCESS)
                  MESSAGE/IDENTIFIER/BELL/WAIT P_00354
                  exit
            END_IF
            #CURRENCY_METHOD  = AR_CONTROLS(SYS_CURRENCY_METHOD)
            #BASE_CURRENCY_CODE     = AR_CONTROLS(SYS_CURRENCY_CODE)
            #DEF_AR_SHORT_CODE      = AR_CONTROLS(AR_SHORT_CODE)
            #DEF_AR_FULL_ACCOUNT    = AR_CONTROLS(AR_FULL_ACCOUNT)
            #DIV_TAX_ON_CASH  = AR_CONTROLS(SYS_TAX_ON_CASH)

            FIND IN SYS_CURRENCY_CODES &
                  /LOCK=NONE &
                  /WITH=SYS_CURRENCY_CODE=#BASE_CURRENCY_CODE

            IF    (%STATUS = %FAILURE)
                  MESSAGE/IDENTIFIER/BELL/WAIT P_82400
                  EXIT (%FAILURE)
            END_IF
            #BASE_CURRENCY_DECIMAL  = SYS_CURRENCY_CODES(SYS_CURRENCY_DECIMALS)
            COMMIT
      END_BLOCK

      BEGIN_BLOCK PROCESS
            PERFORM UPDATE_BATCHES
            PERFORM "GEMAR:INT_AR_M_PROCESS_CASH_RB_ALLOCATIONS" ( &
                  #DIVISION, &
                  #BATCH_NUMBERS)
      END_BLOCK

END_FORM


PROCEDURE_FORM UPDATE_BATCHES &
      /TABLE=CASH_RECEIPT_BATCH_HEADERS &
      /WITH=COMPANY_CODE=#COMPANY_CODE &
      /WITH=DIVISION = #DIVISION &
      /WITH=CR_BATCH_NUMBER AMONG #BATCH_NUMBERS &
      /WITH=CASH_RECEIPT_BATCH_HEADERS(STATUS_FLAG) <> (PARAMETER("STATUS_APPROVE")) &
      /WITH=CASH_RECEIPT_BATCH_HEADERS(STATUS_FLAG) = (PARAMETER("STATUS_UPDATE")) &
      /SORTED_BY=(CASH_RECEIPT_BATCH_HEADERS(CR_BATCH_NUMBER)) &
      /COMMIT_RATE=(1)


      BEGIN_BLOCK CHECK_BATCH_TOTALS_AGAIN
            #TOTAL_BATCH = 0
            PERFORM TOTAL_UP
                  IF    (CASH_RECEIPT_BATCH_HEADERS(ENTERED_CASH_RECEIPT_TOTAL) &
                              <> #TOTAL_BATCH)
                        MESSAGE/IDENTIFIER/BELL/WAIT P_01602,CASH_RECEIPT_BATCH_HEADERS(cr_batch_number)
                        GOTO DUMMY
                  END_IF
      end_block

      BEGIN_BLOCK SECURITY_CHECK

            PERFORM "GEMLB:LB_SECURITY_ACCOUNT_CHECK" &
                              ((CASH_RECEIPT_BATCH_HEADERS(GL_BANK_SHORT_CODE)), &
                               (CASH_RECEIPT_BATCH_HEADERS(BANK_FULL_ACCOUNT)), &
                               (PARAMETER("MODULE_AR")), &
                               (PARAMETER("TTYPE_CR")), &
                               FIELD_SHORT_PROMPT(BANK_CODE),"","",#company_code)

            IF  (%STATUS = %FAILURE)  GOTO DUMMY

            PERFORM GL_ACCESS_CHECK
            IF  (%STATUS=%FAILURE)  GOTO DUMMY
      END_BLOCK

            #BANK_CODE=CASH_RECEIPT_BATCH_HEADERS(BANK_CODE)

      BEGIN_BLOCK CREATE_RECORDS

            FIND IN AR_TRANSACTION_TYPES &
                  /LOCK=WRITE &
                  /WITH=COMPANY_CODE=#COMPANY_CODE &
                  /WITH=DIVISION=#DIVISION &
                  /WITH=TRANSACTION_TYPE=(PARAMETER("TTYPE_CR"))

            IF    (%STATUS = %FAILURE)
                  MESSAGE/IDENTIFIER/BELL/WAIT P_00878,(PARAMETER("TTYPE_CR"))
                  ROLLBACK
                  EXIT(%FAILURE)
            END_IF

            PERFORM CREATE_AR_TRANSACTION_RECORD
            IF    (%STATUS = %FAILURE)
                  ROLLBACK
                  EXIT
            END_IF

            IF    (CASH_RECEIPT_BATCH_HEADERS(BATCH_CR_TOTAL) = 0)
                  CASH_RECEIPT_BATCH_HEADERS(STATUS_FLAG) = (PARAMETER("STATUS_DELETE"))
            ELSE
                  CASH_RECEIPT_BATCH_HEADERS(STATUS_FLAG) = (PARAMETER("STATUS_APPROVE"))
            END_IF
      END_BLOCK

      BEGIN_BLOCK DUMMY
      END_BLOCK

END_FORM


PROCEDURE_FORM GL_ACCESS_CHECK &
      /TABLE=CASH_RECEIPT_BATCHES &
      /WITH=COMPANY_CODE=#COMPANY_CODE &
      /WITH=DIVISION = CASH_RECEIPT_BATCH_HEADERS(DIVISION) &
      /WITH=CR_BATCH_NUMBER=CASH_RECEIPT_BATCH_HEADERS(CR_BATCH_NUMBER)


      BEGIN_BLOCK CHECK_ACCOUNT
            IF  (CASH_RECEIPT_BATCHES(CUSTOMER_NUMBER) = #CASH_SALES)
                PERFORM "GEMLB:LB_SECURITY_ACCOUNT_CHECK" &
                              ((CASH_RECEIPT_BATCHES(GL_SHORT_CODE)), &
                               (CASH_RECEIPT_BATCHES(ACCOUNT_NUMBER)), &
                               (PARAMETER("MODULE_AR")), &
                               (PARAMETER("TTYPE_CR")), &
                               MESSAGE("P_26011"),"","",#COMPANY_CODE)
                IF  (%STATUS = %FAILURE)  EXIT (%FAILURE)
            END_IF
            IF    (#CURRENCY_METHOD = '0')
                  #TOTAL_VALUE = CASH_RECEIPT_BATCHES(AR_TRAN_TOTAL_CURRENCY)
            ELSE
                  #TOTAL_VALUE = CASH_RECEIPT_BATCHES(AR_TRAN_TOTAL_BASE)
            END_IF

            IF  (#SECURITY_ACTIVE = #YES  AND ABS(#TOTAL_VALUE) > #TRANSACTION_MAX)
                MESSAGE/IDENTIFIER/BELL/WAIT P_22300,CASH_RECEIPT_BATCHES(CR_BATCH_SEQ_NUMBER)
                EXIT(%FAILURE)
            END_IF
      END_BLOCK

END_FORM


PROCEDURE_FORM MAKE_GL_POSTINGS


      BEGIN_BLOCK GL_POSTINGS

            FIND IN SYS_CURRENCY_CODES &
                  /LOCK=NONE &
                  /WITH=SYS_CURRENCY_CODE = CASH_RECEIPT_BATCHES(SYS_CURRENCY_CODE)

            #CURRENCY_DECIMAL = SYS_CURRENCY_CODES(SYS_CURRENCY_DECIMALS)
            #CURRENCY_RATIO_INDIC = CASH_RECEIPT_BATCHES(SYS_CURRENCY_RATIO_INDIC)

            CLEAR_BUFFER GL_POSTINGS

            #POSTING_TOTAL_CURRENCY = CASH_RECEIPT_BATCHES(AR_TRAN_TOTAL_CURRENCY)
            #POSTING_TOTAL_BASE = CASH_RECEIPT_BATCHES(AR_TRAN_TOTAL_BASE)

            IF    (CASH_RECEIPT_BATCHES(CUSTOMER_NUMBER)=#CASH_SALES)
                  #TAX = CASH_RECEIPT_BATCHES(TAX)
            ELSE
                  #TAX = 0
            END_IF

            IF  (#CURRENCY_METHOD > '0' AND #TAX > 0)
                  IF    (CASH_RECEIPT_BATCHES(CUSTOMER_NUMBER)=#CASH_SALES)
                        IF    (#CURRENCY_RATIO_INDIC = (PARAMETER("MULTIPLY_RATIO_INDIC")))
                              #TAX_BASE = ROUND(#TAX * &
                                    CASH_RECEIPT_BATCHES(SYS_CURRENCY_RATE),#BASE_CURRENCY_DECIMAL)
                        ELSE
                              #TAX_BASE = ROUND(#TAX / &
                                    CASH_RECEIPT_BATCHES(SYS_CURRENCY_RATE),#BASE_CURRENCY_DECIMAL)
                        END_IF
                  ELSE
                        #TAX_BASE = 0
                  END_IF
            ELSE
                  #TAX_BASE = 0
            END_IF

            GL_POSTINGS(GL_SHORT_CODE)   = CASH_RECEIPT_BATCH_HEADERS(GL_BANK_SHORT_CODE)
            GL_POSTINGS(ACCOUNT_NUMBER)  = CASH_RECEIPT_BATCH_HEADERS(BANK_FULL_ACCOUNT)
            GL_POSTINGS(COMPANY_CODE)    = #COMPANY_CODE
            GL_POSTINGS(DIVISION)        = CASH_RECEIPT_BATCHES(DIVISION)
            GL_POSTINGS(POSTING_DATE)    = CASH_RECEIPT_BATCH_HEADERS(BANK_DATE)
            GL_POSTINGS(SOURCE_MODULE)   = (PARAMETER("MODULE_AR"))
            GL_POSTINGS(MODULE_TRANSACTION_TYPE)= (PARAMETER("TTYPE_CR"))
            GL_POSTINGS(POSTING_DATE)    = CASH_RECEIPT_BATCH_HEADERS(BANK_DATE)

            GL_POSTINGS(SYS_CURRENCY_CODE) = CASH_RECEIPT_BATCHES(SYS_CURRENCY_CODE)
            GL_POSTINGS(SYS_CURRENCY_RATE) = CASH_RECEIPT_BATCHES(SYS_CURRENCY_RATE)
            GL_POSTINGS(SYS_BASE_CURRENCY_CODE)=#BASE_CURRENCY_CODE
            GL_POSTINGS(SYS_CURRENCY_METHOD)=#CURRENCY_METHOD
            GL_POSTINGS(SYS_CURRENCY_RATIO_INDIC)=#CURRENCY_RATIO_INDIC

! mod by oil 1030
!           GL_POSTINGS(GL_POSTING_CURRENCY_DR) = #POSTING_TOTAL_CURRENCY
!           GL_POSTINGS(GL_POSTING_BASE_DR) = #POSTING_TOTAL_BASE

            IF (#POSTING_TOTAL_CURRENCY >= 0)
                  GL_POSTINGS(GL_POSTING_CURRENCY_DR) = #POSTING_TOTAL_CURRENCY
                  GL_POSTINGS(GL_POSTING_BASE_DR) = #POSTING_TOTAL_BASE
            ELSE
                  GL_POSTINGS(GL_POSTING_CURRENCY_CR) = #POSTING_TOTAL_CURRENCY * (-1)
                  GL_POSTINGS(GL_POSTING_BASE_CR) = #POSTING_TOTAL_BASE * (-1)
            END_IF
! end of mod

            IF    (CASH_RECEIPT_BATCHES(CUSTOMER_NUMBER)=#CASH_SALES)
                  GL_POSTINGS(POSTING_REFERENCE)=MESSAGE("P_00094",CASH_RECEIPT_BATCHES(CR_BATCH_NUMBER))
            ELSE
                  GL_POSTINGS(POSTING_REFERENCE) = #CASH_RECEIPT_NUMBER
            END_IF

            GL_POSTINGS(SOURCE_REFERENCE) = CASH_RECEIPT_BATCHES(CUSTOMER_NUMBER)
            GL_POSTINGS(BATCH_NUMBER)=CASH_RECEIPT_BATCHES(CR_BATCH_NUMBER)
            GL_POSTINGS(PERIOD)         = CASH_RECEIPT_BATCH_HEADERS(PERIOD)
            GL_POSTINGS(YEAR)           = CASH_RECEIPT_BATCH_HEADERS(YEAR)
            GL_POSTINGS(COST_CENTER)      = CASH_RECEIPT_BATCHES(COST_CENTER)
            IF  (CASH_RECEIPT_BATCHES(CUSTOMER_NUMBER) = #CASH_SALES)
                  GL_POSTINGS(POSTING_DESCRIPTION)=CASH_RECEIPT_BATCHES(CUSTOMER_REFERENCE)
            ELSE
                  GL_POSTINGS(POSTING_DESCRIPTION) = MESSAGE("P_2CASH_RECEIPT_BATCH_1",CASH_RECEIPT_BATCHES(CR_BATCH_NUMBER), &
                                    CASH_RECEIPT_BATCHES(CR_BATCH_SEQ_NUMBER))
            END_IF
            GL_POSTINGS(ACCOUNT_IDENT)  = (PARAMETER("ACCOUNT_IDENT_ACTUAL"))
            GL_POSTINGS(ACTIVATION_STATUS) = (PARAMETER("STATUS_ACTIVE"))

            ADD TO GL_POSTINGS
            IF (%STATUS <> %SUCCESS) EXIT (%FAILURE)

            CLEAR_BUFFER GL_POSTINGS

            IF  (CASH_RECEIPT_BATCHES(CUSTOMER_NUMBER) = #CASH_SALES)
                  GL_POSTINGS(GL_SHORT_CODE) = &
                                    CASH_RECEIPT_BATCHES(GL_SHORT_CODE)
                  GL_POSTINGS(ACCOUNT_NUMBER) = &
                                    CASH_RECEIPT_BATCHES(ACCOUNT_NUMBER)
            ELSE
                  GL_POSTINGS(GL_SHORT_CODE) = #AR_SHORT_CODE
                  GL_POSTINGS(ACCOUNT_NUMBER) = #AR_FULL_ACCOUNT
            END_IF
            GL_POSTINGS(COMPANY_CODE)    = #COMPANY_CODE
            GL_POSTINGS(DIVISION)        = CASH_RECEIPT_BATCHES(DIVISION)
            GL_POSTINGS(POSTING_DATE)    = &
                              CASH_RECEIPT_BATCH_HEADERS(BANK_DATE)
            GL_POSTINGS(SOURCE_MODULE)   = (PARAMETER("MODULE_AR"))
            GL_POSTINGS(MODULE_TRANSACTION_TYPE)= (PARAMETER("TTYPE_CR"))

            GL_POSTINGS(SYS_CURRENCY_CODE) = CASH_RECEIPT_BATCHES(SYS_CURRENCY_CODE)
            GL_POSTINGS(SYS_CURRENCY_RATE) = CASH_RECEIPT_BATCHES(SYS_CURRENCY_RATE)
            GL_POSTINGS(SYS_CURRENCY_METHOD)=#CURRENCY_METHOD
            GL_POSTINGS(SYS_BASE_CURRENCY_CODE)=#BASE_CURRENCY_CODE
            GL_POSTINGS(SYS_CURRENCY_RATIO_INDIC)=#CURRENCY_RATIO_INDIC
! mod by oil 1030
!           GL_POSTINGS(GL_POSTING_CURRENCY_CR) = (#POSTING_TOTAL_CURRENCY-#TAX)
!           GL_POSTINGS(GL_POSTING_BASE_CR) = (#POSTING_TOTAL_BASE-#TAX_BASE)
            
            IF (#POSTING_TOTAL_CURRENCY >= 0)
                  GL_POSTINGS(GL_POSTING_CURRENCY_CR) = (#POSTING_TOTAL_CURRENCY-#TAX)
                  GL_POSTINGS(GL_POSTING_BASE_CR) = (#POSTING_TOTAL_BASE-#TAX_BASE)
            ELSE
                  GL_POSTINGS(GL_POSTING_CURRENCY_DR) = ((#POSTING_TOTAL_CURRENCY -#TAX) * (-1))
                  GL_POSTINGS(GL_POSTING_BASE_DR) = ((#POSTING_TOTAL_BASE -#TAX_BASE) * (-1))
            END_IF
! end of mod
            IF    (CASH_RECEIPT_BATCHES(CUSTOMER_NUMBER)=#CASH_SALES)
                  GL_POSTINGS(POSTING_REFERENCE)=MESSAGE("P_00094",CASH_RECEIPT_BATCHES(CR_BATCH_NUMBER))
            ELSE
                  GL_POSTINGS(POSTING_REFERENCE) = #CASH_RECEIPT_NUMBER
            END_IF

            GL_POSTINGS(SOURCE_REFERENCE) = CASH_RECEIPT_BATCHES(CUSTOMER_NUMBER)
            GL_POSTINGS(BATCH_NUMBER)=CASH_RECEIPT_BATCHES(CR_BATCH_NUMBER)
            GL_POSTINGS(PERIOD)         = CASH_RECEIPT_BATCH_HEADERS(PERIOD)
            GL_POSTINGS(YEAR)           = CASH_RECEIPT_BATCH_HEADERS(YEAR)
            GL_POSTINGS(COST_CENTER)      = CASH_RECEIPT_BATCHES(COST_CENTER)
            GL_POSTINGS(POSTING_DESCRIPTION) = MESSAGE("P_2CASH_RECEIPT_BATCH_1",CASH_RECEIPT_BATCHES(CR_BATCH_NUMBER), &
                                    CASH_RECEIPT_BATCHES(CR_BATCH_SEQ_NUMBER))
            GL_POSTINGS(ACCOUNT_IDENT)  = (PARAMETER("ACCOUNT_IDENT_ACTUAL"))
            GL_POSTINGS(ACTIVATION_STATUS) = (PARAMETER("STATUS_ACTIVE"))
            GL_POSTINGS(SYS_POST_TYPE) = (PARAMETER('GL_POSTING_AUTOMATIC'))


            ADD TO GL_POSTINGS
            IF (%STATUS <> %SUCCESS) EXIT (%FAILURE)
      END_BLOCK

      BEGIN_BLOCK POST_TAX_AMOUNTS
            IF    (CASH_RECEIPT_BATCHES(CUSTOMER_NUMBER) = #CASH_SALES)
                  PERFORM POST_TAX

            ELSE_IF (#CUST_TAX_ON_CASH = #YES AND #DIV_TAX_ON_CASH = #YES)
                  
                  FIND IN TAX_RATES &
                        /LOCK=NONE &
                        /WITH=COMPANY_CODE    = #COMPANY_CODE &
                        /WITH=CUSTOMER_TAX_CODE = #CUST_TAX_CODE &
                        /WITH=PRODUCT_TAX_CODE=""

                  IF  (%STATUS = %FAILURE) 
                        GOTO END

                  ELSE_IF (TAX_RATES(SYS_TAX_ON_CASH) = #YES)

                        FIND IN AT:AR_TRANSACTION_TYPES &
                              /SECONDARY &
                              /LOCK=NONE &
                              /WITH=COMPANY_CODE=#COMPANY_CODE &
                              /WITH=DIVISION=#DIVISION &
                              /WITH=TRANSACTION_TYPE=(PARAMETER("TTYPE_AT"))

                        IF    (%STATUS = %FAILURE)
                              MESSAGE/IDENTIFIER/BELL/WAIT P_00878,(PARAMETER("TTYPE_AT"))
                              EXIT(%FAILURE)
                        END_IF

                              IF (AT:AR_TRANSACTION_TYPES(AR_CASH_ALLOCATION_ACCOUNT) <> "" OR &
                                 AT:AR_TRANSACTION_TYPES(AR_CASH_ALLOCATION_CODE) <> "")
                                    #TEMP_TAX_CODE = AT:AR_TRANSACTION_TYPES(AR_CASH_ALLOCATION_CODE)
                                    #TEMP_TAX_ACCOUNT = AT:AR_TRANSACTION_TYPES(AR_CASH_ALLOCATION_ACCOUNT)

                                    #AR_TAX_CODE = TAX_RATES(AR_TAX_CODE)
                                    #AR_TAX_ACCOUNT = TAX_RATES(AR_TAX_FULL_ACCOUNT)

                              ELSE
                                    #TEMP_TAX_CODE = TAX_RATES(AR_TEMP_TAX_CODE)
                                    #TEMP_TAX_ACCOUNT = TAX_RATES(AR_TEMP_TAX_ACCOUNT)
                                    #TAX_RATE   = TAX_RATES(SYS_TAX_RATE)

                                    #AR_TAX_CODE = TAX_RATES(AR_TAX_CODE)
                                    #AR_TAX_ACCOUNT = TAX_RATES(AR_TAX_FULL_ACCOUNT)
                                    END_IF

                        PERFORM POST_TAX_ON_CASH
                  END_IF
            END_IF
      END_BLOCK
      BEGIN_BLOCK END
      END_BLOCK
END_FORM

PROCEDURE_FORM POST_TAX &
      /TABLE=CASH_RECEIPT_TAX_DETAILS &
      /WITH=COMPANY_CODE=#COMPANY_CODE &
      /WITH=DIVISION=CASH_RECEIPT_BATCH_HEADERS(DIVISION) &
      /WITH=CR_BATCH_NUMBER=CASH_RECEIPT_BATCH_HEADERS(CR_BATCH_NUMBER) &
      /WITH=CR_BATCH_SEQ_NUMBER=CASH_RECEIPT_BATCHES(CR_BATCH_SEQ_NUMBER)


      BEGIN_BLOCK TAX_POSTINGS
            IF  (CASH_RECEIPT_TAX_DETAILS(AR_POSTING_FORMAT) <> "")

                  #AMOUNT_CR = CASH_RECEIPT_TAX_DETAILS(TAX)
                  #AMOUNT_DR = 0

                  PERFORM CALL_FORMAT_SPLIT
            ELSE
            CLEAR_BUFFER GL_POSTINGS

            GL_POSTINGS(COMPANY_CODE) = #COMPANY_CODE
            GL_POSTINGS(DIVISION) = CASH_RECEIPT_BATCHES(DIVISION)
            GL_POSTINGS(POSTING_DATE) = CASH_RECEIPT_BATCH_HEADERS(BANK_DATE)
            GL_POSTINGS(SOURCE_MODULE) = (PARAMETER("MODULE_AR"))
            GL_POSTINGS(MODULE_TRANSACTION_TYPE) = (PARAMETER("TTYPE_CR"))
            IF    (CASH_RECEIPT_BATCHES(CUSTOMER_NUMBER)=#CASH_SALES)
                  GL_POSTINGS(POSTING_REFERENCE)=MESSAGE("P_00094",CASH_RECEIPT_BATCHES(CR_BATCH_NUMBER))
            ELSE
                  GL_POSTINGS(POSTING_REFERENCE) = #CASH_RECEIPT_NUMBER
            END_IF
            GL_POSTINGS(SOURCE_REFERENCE) = CASH_RECEIPT_BATCHES(CUSTOMER_NUMBER)
            GL_POSTINGS(BATCH_NUMBER)=CASH_RECEIPT_BATCHES(CR_BATCH_NUMBER)
            GL_POSTINGS(PERIOD)         = CASH_RECEIPT_BATCH_HEADERS(PERIOD)
            GL_POSTINGS(YEAR)           = CASH_RECEIPT_BATCH_HEADERS(YEAR)
            GL_POSTINGS(COST_CENTER)      = CASH_RECEIPT_BATCHES(COST_CENTER)
            GL_POSTINGS(POSTING_DESCRIPTION) = MESSAGE("P_2CASH_RECEIPT_BATCH_1",CASH_RECEIPT_BATCHES(CR_BATCH_NUMBER), &
                                          CASH_RECEIPT_BATCHES(CR_BATCH_SEQ_NUMBER))
            GL_POSTINGS(ACCOUNT_IDENT) = (PARAMETER("ACCOUNT_IDENT_ACTUAL"))
            GL_POSTINGS(GL_SHORT_CODE) = &
                              CASH_RECEIPT_TAX_DETAILS(AR_TAX_CODE)
            GL_POSTINGS(ACCOUNT_NUMBER) = &
                              CASH_RECEIPT_TAX_DETAILS(AR_TAX_FULL_ACCOUNT)

            GL_POSTINGS(SYS_CURRENCY_CODE)=CASH_RECEIPT_BATCHES(SYS_CURRENCY_CODE)
            GL_POSTINGS(SYS_CURRENCY_RATE)=CASH_RECEIPT_BATCHES(SYS_CURRENCY_RATE)
            GL_POSTINGS(SYS_CURRENCY_METHOD)=#CURRENCY_METHOD
            GL_POSTINGS(SYS_BASE_CURRENCY_CODE)=#BASE_CURRENCY_CODE
            GL_POSTINGS(SYS_CURRENCY_RATIO_INDIC)=#CURRENCY_RATIO_INDIC
            GL_POSTINGS(GL_POSTING_CURRENCY_CR) = CASH_RECEIPT_TAX_DETAILS(TAX)

            IF  (#CURRENCY_METHOD > '0')
                  IF    (#CURRENCY_RATIO_INDIC = (PARAMETER("MULTIPLY_RATIO_INDIC")))
                        GL_POSTINGS(GL_POSTING_BASE_CR) = ROUND(CASH_RECEIPT_TAX_DETAILS(TAX) * &
                                    CASH_RECEIPT_BATCHES(SYS_CURRENCY_RATE),#BASE_CURRENCY_DECIMAL)
                  ELSE
                        GL_POSTINGS(GL_POSTING_BASE_CR) = ROUND(CASH_RECEIPT_TAX_DETAILS(TAX) / &
                                    CASH_RECEIPT_BATCHES(SYS_CURRENCY_RATE),#BASE_CURRENCY_DECIMAL)
                  END_IF
            END_IF
            GL_POSTINGS(ACTIVATION_STATUS) = (PARAMETER("STATUS_ACTIVE"))

            ADD TO GL_POSTINGS
            IF (%STATUS <> %SUCCESS) EXIT (%FAILURE)
            END_IF
      END_BLOCK

END_FORM

PROCEDURE_FORM POST_TAX_ON_CASH

      BEGIN_BLOCK CR_POSTING
            #A = (#TAX_RATE/100 + 1)
            #B = (CASH_RECEIPT_BATCHES(AR_TRAN_TOTAL_CURRENCY)/#A)
            #TEMP_TAX_VALUE = (CASH_RECEIPT_BATCHES(AR_TRAN_TOTAL_CURRENCY) - #B)

            CLEAR_BUFFER GL_POSTINGS

            GL_POSTINGS(COMPANY_CODE) = #COMPANY_CODE
            GL_POSTINGS(DIVISION) = CASH_RECEIPT_BATCHES(DIVISION)
            GL_POSTINGS(POSTING_DATE) = CASH_RECEIPT_BATCH_HEADERS(BANK_DATE)
            GL_POSTINGS(SOURCE_MODULE) = (PARAMETER("MODULE_AR"))
            GL_POSTINGS(MODULE_TRANSACTION_TYPE) = (PARAMETER("TTYPE_CR"))
            GL_POSTINGS(POSTING_REFERENCE) = #CASH_RECEIPT_NUMBER
            GL_POSTINGS(SOURCE_REFERENCE) = CASH_RECEIPT_BATCHES(CUSTOMER_NUMBER)
            GL_POSTINGS(BATCH_NUMBER)=CASH_RECEIPT_BATCHES(CR_BATCH_NUMBER)
            GL_POSTINGS(PERIOD)         = CASH_RECEIPT_BATCH_HEADERS(PERIOD)
            GL_POSTINGS(YEAR)           = CASH_RECEIPT_BATCH_HEADERS(YEAR)
            GL_POSTINGS(COST_CENTER)      = CASH_RECEIPT_BATCHES(COST_CENTER)
            GL_POSTINGS(POSTING_DESCRIPTION) = MESSAGE("P_2CASH_RECEIPT_BATCH_1",CASH_RECEIPT_BATCHES(CR_BATCH_NUMBER), &
                                          CASH_RECEIPT_BATCHES(CR_BATCH_SEQ_NUMBER))
            GL_POSTINGS(ACCOUNT_IDENT) = (PARAMETER("ACCOUNT_IDENT_ACTUAL"))
            GL_POSTINGS(GL_SHORT_CODE) = #AR_TAX_CODE 
            GL_POSTINGS(ACCOUNT_NUMBER) = #AR_TAX_ACCOUNT 
            GL_POSTINGS(SYS_CURRENCY_CODE)=CASH_RECEIPT_BATCHES(SYS_CURRENCY_CODE)
            GL_POSTINGS(SYS_CURRENCY_RATE)=CASH_RECEIPT_BATCHES(SYS_CURRENCY_RATE)
            GL_POSTINGS(SYS_CURRENCY_METHOD)=#CURRENCY_METHOD
            GL_POSTINGS(SYS_BASE_CURRENCY_CODE)=#BASE_CURRENCY_CODE
            GL_POSTINGS(SYS_CURRENCY_RATIO_INDIC)=#CURRENCY_RATIO_INDIC
            GL_POSTINGS(GL_POSTING_CURRENCY_CR) =#TEMP_TAX_VALUE

            IF  (#CURRENCY_METHOD > '0')
                  IF    (#CURRENCY_RATIO_INDIC = (PARAMETER("MULTIPLY_RATIO_INDIC")))
                        GL_POSTINGS(GL_POSTING_BASE_CR) =ROUND(#TEMP_TAX_VALUE * &
                                    CASH_RECEIPT_BATCHES(SYS_CURRENCY_RATE),#BASE_CURRENCY_DECIMAL)
                  ELSE
                        GL_POSTINGS(GL_POSTING_BASE_CR) = ROUND(#TEMP_TAX_VALUE / &
                                    CASH_RECEIPT_BATCHES(SYS_CURRENCY_RATE),#BASE_CURRENCY_DECIMAL)
                  END_IF
            END_IF
            GL_POSTINGS(ACTIVATION_STATUS) = (PARAMETER("STATUS_ACTIVE"))

            ADD TO GL_POSTINGS
            IF (%STATUS <> %SUCCESS) EXIT (%FAILURE)
      END_BLOCK

      BEGIN_BLOCK DR_POSTING

            CLEAR_BUFFER GL_POSTINGS

            GL_POSTINGS(COMPANY_CODE) = #COMPANY_CODE
            GL_POSTINGS(DIVISION) = CASH_RECEIPT_BATCHES(DIVISION)
            GL_POSTINGS(POSTING_DATE) = CASH_RECEIPT_BATCH_HEADERS(BANK_DATE)
            GL_POSTINGS(SOURCE_MODULE) = (PARAMETER("MODULE_AR"))
            GL_POSTINGS(MODULE_TRANSACTION_TYPE) = (PARAMETER("TTYPE_CR"))
            GL_POSTINGS(POSTING_REFERENCE) = #CASH_RECEIPT_NUMBER
            GL_POSTINGS(SOURCE_REFERENCE) = CASH_RECEIPT_BATCHES(CUSTOMER_NUMBER)
            GL_POSTINGS(BATCH_NUMBER)=CASH_RECEIPT_BATCHES(CR_BATCH_NUMBER)
            GL_POSTINGS(PERIOD)         = CASH_RECEIPT_BATCH_HEADERS(PERIOD)
            GL_POSTINGS(YEAR)           = CASH_RECEIPT_BATCH_HEADERS(YEAR)
            GL_POSTINGS(COST_CENTER)      = CASH_RECEIPT_BATCHES(COST_CENTER)
            GL_POSTINGS(POSTING_DESCRIPTION) = MESSAGE("P_2CASH_RECEIPT_BATCH_1",CASH_RECEIPT_BATCHES(CR_BATCH_NUMBER), &
                                          CASH_RECEIPT_BATCHES(CR_BATCH_SEQ_NUMBER))
            GL_POSTINGS(ACCOUNT_IDENT) = (PARAMETER("ACCOUNT_IDENT_ACTUAL"))
            GL_POSTINGS(GL_SHORT_CODE) = #TEMP_TAX_CODE
            GL_POSTINGS(ACCOUNT_NUMBER) = #TEMP_TAX_ACCOUNT 
            GL_POSTINGS(SYS_CURRENCY_CODE)=CASH_RECEIPT_BATCHES(SYS_CURRENCY_CODE)
            GL_POSTINGS(SYS_CURRENCY_RATE)=CASH_RECEIPT_BATCHES(SYS_CURRENCY_RATE)
            GL_POSTINGS(SYS_CURRENCY_METHOD)=#CURRENCY_METHOD
            GL_POSTINGS(SYS_BASE_CURRENCY_CODE)=#BASE_CURRENCY_CODE
            GL_POSTINGS(SYS_CURRENCY_RATIO_INDIC)=#CURRENCY_RATIO_INDIC
            GL_POSTINGS(GL_POSTING_CURRENCY_DR) =#TEMP_TAX_VALUE

            IF  (#CURRENCY_METHOD > '0')
                  IF    (#CURRENCY_RATIO_INDIC = (PARAMETER("MULTIPLY_RATIO_INDIC")))
                        GL_POSTINGS(GL_POSTING_BASE_DR) =ROUND(#TEMP_TAX_VALUE * &
                                    CASH_RECEIPT_BATCHES(SYS_CURRENCY_RATE),#BASE_CURRENCY_DECIMAL)
                  ELSE
                        GL_POSTINGS(GL_POSTING_BASE_DR) =ROUND(#TEMP_TAX_VALUE / &
                                    CASH_RECEIPT_BATCHES(SYS_CURRENCY_RATE),#BASE_CURRENCY_DECIMAL)
                  END_IF
            END_IF
            GL_POSTINGS(ACTIVATION_STATUS) = (PARAMETER("STATUS_ACTIVE"))

            ADD TO GL_POSTINGS
            IF (%STATUS <> %SUCCESS) EXIT (%FAILURE)

            PERFORM CREATE_TAX_TRANSACTION_FOR_TAX_ON_CASH
      END_BLOCK

END_FORM

PROCEDURE_FORM CREATE_TAX_TRANSACTION_FOR_TAX_ON_CASH &

      BEGIN_BLOCK TAX_TRANSACTION_ADD

            CLEAR_BUFFER TAX_TRANSACTIONS

            TAX_TRANSACTIONS(COMPANY_CODE)           = #COMPANY_CODE
            TAX_TRANSACTIONS(DIVISION)               = #DIVISION
            TAX_TRANSACTIONS(SOURCE_MODULE)          = (PARAMETER("MODULE_AR"))
            TAX_TRANSACTIONS(TRANSACTION_TYPE)       = (PARAMETER("TTYPE_CR"))
            TAX_TRANSACTIONS(TAX_TRANSACTION_NUMBER) = #CASH_RECEIPT_NUMBER
            TAX_TRANSACTIONS(TRANSACTION_LINE_NUMBER)= CASH_RECEIPT_BATCHES(CR_BATCH_SEQ_NUMBER)
            TAX_TRANSACTIONS(SEQUENCE)               = "001"
            TAX_TRANSACTIONS(CUSTOMER_NUMBER)        = CASH_RECEIPT_BATCHES(CUSTOMER_NUMBER)
            TAX_TRANSACTIONS(CUSTOMER_TAX_CODE)        = #CUST_TAX_CODE
            TAX_TRANSACTIONS(PRODUCT_TAX_CODE)   = ""
            TAX_TRANSACTIONS(PERIOD)                 = CASH_RECEIPT_BATCH_HEADERS(PERIOD)
            TAX_TRANSACTIONS(TRANSACTION_DATE)       = CASH_RECEIPT_BATCHES(TRANSACTION_DATE)
            TAX_TRANSACTIONS(SYS_TRAN_TOTAL_CURRENCY)= CASH_RECEIPT_BATCHES(AR_TRAN_TOTAL_CURRENCY) -#TEMP_TAX_VALUE
            TAX_TRANSACTIONS(SYS_TAX_CURRENCY)       = #TEMP_TAX_VALUE
            TAX_TRANSACTIONS(YEAR)                   = CASH_RECEIPT_BATCH_HEADERS(YEAR)
            TAX_TRANSACTIONS(SOURCE_REFERENCE)       = CASH_RECEIPT_BATCHES(CUSTOMER_REFERENCE)
            TAX_TRANSACTIONS(SYS_CURRENCY_CODE)  = CASH_RECEIPT_BATCHES(SYS_CURRENCY_CODE)
            TAX_TRANSACTIONS(SYS_CURRENCY_RATE)  = CASH_RECEIPT_BATCHES(SYS_CURRENCY_RATE)
            TAX_TRANSACTIONS(SYS_CURRENCY_RATIO_INDIC)= CASH_RECEIPT_BATCHES(SYS_CURRENCY_RATIO_INDIC)

            IF (#CURRENCY_METHOD > '0')
                  IF (TAX_TRANSACTIONS(SYS_CURRENCY_RATIO_INDIC) = (PARAMETER("MULTIPLY_RATIO_INDIC")))
                        TAX_TRANSACTIONS(SYS_TRAN_TOTAL_BASE) = ROUND(TAX_TRANSACTIONS(SYS_TRAN_TOTAL_CURRENCY) * &
                                    TAX_TRANSACTIONS(SYS_CURRENCY_RATE),#BASE_CURRENCY_DECIMAL)
                        TAX_TRANSACTIONS(SYS_TAX_BASE) = ROUND(TAX_TRANSACTIONS(SYS_TAX_CURRENCY) * &
                                    TAX_TRANSACTIONS(SYS_CURRENCY_RATE),#BASE_CURRENCY_DECIMAL)
                  ELSE
                        TAX_TRANSACTIONS(SYS_TRAN_TOTAL_BASE) = ROUND(TAX_TRANSACTIONS(SYS_TRAN_TOTAL_CURRENCY) / &
                                    TAX_TRANSACTIONS(SYS_CURRENCY_RATE),#BASE_CURRENCY_DECIMAL)
                        TAX_TRANSACTIONS(SYS_TAX_BASE) = ROUND(TAX_TRANSACTIONS(SYS_TAX_CURRENCY) / &
                                    TAX_TRANSACTIONS(SYS_CURRENCY_RATE),#BASE_CURRENCY_DECIMAL)
                  END_IF
            END_IF

            ADD TO TAX_TRANSACTIONS

            IF  (%STATUS = %FAILURE)
                MESSAGE/IDENTIFIER/BELL/WAIT P_00822
                EXIT
            END_IF
      END_BLOCK

END_FORM


PROCEDURE_FORM CREATE_AR_TRANSACTION_RECORD &
      /TABLE=CASH_RECEIPT_BATCHES &
      /WITH=COMPANY_CODE=#COMPANY_CODE &
      /WITH=DIVISION = CASH_RECEIPT_BATCH_HEADERS(DIVISION) &
      /WITH=CR_BATCH_NUMBER=CASH_RECEIPT_BATCH_HEADERS(CR_BATCH_NUMBER)


      BEGIN_BLOCK LOAD_TRANS_RECORD
            #AR_SHORT_CODE    = #DEF_AR_SHORT_CODE
            #AR_FULL_ACCOUNT  = #DEF_AR_FULL_ACCOUNT
            IF    (CASH_RECEIPT_BATCHES(CUSTOMER_NUMBER) = #CASH_SALES)
                  GOTO CREATE_GL_POSTINGS
            END_IF
            FIND IN CUSTOMERS &
                  /LOCK=NONE &
                  /WITH=COMPANY_CODE    = #COMPANY_CODE &
                  /WITH=DIVISION        = #DIVISION &
                  /WITH=CUSTOMER_NUMBER = CASH_RECEIPT_BATCHES(CUSTOMER_NUMBER)

            IF  ((CUSTOMERS(AR_SHORT_CODE) <> "") OR (CUSTOMERS(AR_FULL_ACCOUNT) <> ""))
                  #AR_SHORT_CODE    = CUSTOMERS(AR_SHORT_CODE)
                  #AR_FULL_ACCOUNT  = CUSTOMERS(AR_FULL_ACCOUNT)
            END_IF


            #ADDRESS_CODE = CUSTOMERS(DEFAULT_ADDR)

            FIND IN CUSTOMER_ADDRESSES &
                  /LOCK=NONE &
                  /WITH=COMPANY_CODE=#COMPANY_CODE &
                  /WITH=DIVISION=CASH_RECEIPT_BATCHES(DIVISION) &
                  /WITH=CUSTOMER_NUMBER=CASH_RECEIPT_BATCHES(CUSTOMER_NUMBER) &
                  /WITH=ADDRESS_CODE=#ADDRESS_CODE
            
            #CUST_TAX_ON_CASH = CUSTOMER_ADDRESSES(SYS_TAX_ON_CASH)           
            #CUST_TAX_CODE    =  CUSTOMER_ADDRESSES(TAX_CODE)

            CLEAR_BUFFER AR_TRANSACTIONS

            AR_TRANSACTIONS(SALESPERSON_CODE) = CUSTOMER_ADDRESSES(SALESPERSON_CODE)
            AR_TRANSACTIONS(COMPANY_CODE)   = #COMPANY_CODE
            AR_TRANSACTIONS(DIVISION)       = CASH_RECEIPT_BATCHES(DIVISION)
            AR_TRANSACTIONS(CUSTOMER_NUMBER)= CASH_RECEIPT_BATCHES(CUSTOMER_NUMBER)
            AR_TRANSACTIONS(PERIOD)     = CASH_RECEIPT_BATCH_HEADERS(PERIOD)
            AR_TRANSACTIONS(YEAR)       = CASH_RECEIPT_BATCH_HEADERS(YEAR)
            AR_TRANSACTIONS(TRANSACTION_TYPE) = (PARAMETER("TTYPE_CR"))
            AR_TRANSACTIONS(TRANSACTION_DATE) = CASH_RECEIPT_BATCHES(TRANSACTION_DATE)
            AR_TRANSACTIONS(ORIG_INVOICE_DIVISION) = #DIVISION

            #CASH_RECEIPT_NUMBER = AR_TRANSACTION_TYPES(TRANSACTION_NUMBER)
            AR_TRANSACTION_TYPES(TRANSACTION_NUMBER) = #CASH_RECEIPT_NUMBER + 1

            AR_TRANSACTIONS(TRANSACTION_NUMBER)      = #CASH_RECEIPT_NUMBER

            CASH_RECEIPT_BATCHES(TRANSACTION_NUMBER) = &
                              AR_TRANSACTIONS(TRANSACTION_NUMBER)

            AR_TRANSACTIONS(BATCH_NUMBER) = &
                              CASH_RECEIPT_BATCHES(CR_BATCH_NUMBER)
            AR_TRANSACTIONS(BATCH_SEQUENCE_NUMBER)=&
                        CASH_RECEIPT_BATCHES(CR_BATCH_SEQ_NUMBER)

            AR_TRANSACTIONS(CREDIT_STATUS_CODE)   = ""
            AR_TRANSACTIONS(PID)         = ""
            AR_TRANSACTIONS(DUE_DATE)    = %TODAY
! *** 15-dec-1998 *** ape -
!           AR_TRANSACTIONS(DOCUMENT_REFERENCE)=&
!                       CASH_RECEIPT_BATCHES(CR_BATCH_NUMBER)&"-" &&
!                       CASH_RECEIPT_BATCHES(CR_BATCH_SEQ_NUMBER)

            AR_TRANSACTIONS(DOCUMENT_REFERENCE) = CASH_RECEIPT_BATCH_HEADERS(BANK_CODE)

! *** 15-dec-1998 *** ape
            AR_TRANSACTIONS(TRANSACTION_DESCRIPTION) = MESSAGE("P_26258")
            AR_TRANSACTIONS(DORC_INDICATOR)          = AR_TRANSACTION_TYPES(DORC_INDICATOR)
            AR_TRANSACTIONS(CUSTOMER_REFERENCE) = &
                              CASH_RECEIPT_BATCHES(CUSTOMER_REFERENCE)
            AR_TRANSACTIONS(BANK_CODE)=#BANK_CODE
            AR_TRANSACTIONS(CASH_DISCOUNT) = &
                              CASH_RECEIPT_BATCHES(CASH_DISCOUNT)
            AR_TRANSACTIONS(STATEMENT_ACCOUNT) = CUSTOMERS(STATEMENT_ACCOUNT)

            AR_TRANSACTIONS(SYS_CURRENCY_CODE) = &
                              CASH_RECEIPT_BATCHES(SYS_CURRENCY_CODE)
            AR_TRANSACTIONS(SYS_CURRENCY_RATE) = &
                              CASH_RECEIPT_BATCHES(SYS_CURRENCY_RATE)

            IF    (#CURRENCY_METHOD <> '0')
                    AR_TRANSACTIONS(SYS_BASE_CURRENCY_CODE) =#BASE_CURRENCY_CODE
                  AR_TRANSACTIONS(SYS_RATE_AUTHORITY) = &
                              CASH_RECEIPT_BATCHES(SYS_RATE_AUTHORITY)
                  AR_TRANSACTIONS(SYS_RATE_TYPE) = &
                              CASH_RECEIPT_BATCHES(SYS_RATE_TYPE)
                  AR_TRANSACTIONS(SYS_CURRENCY_FIXED_FLAG) = &
                              CASH_RECEIPT_BATCHES(SYS_CURRENCY_FIXED_FLAG)
                  AR_TRANSACTIONS(SYS_CURRENCY_RATIO_INDIC) = &
                              CASH_RECEIPT_BATCHES(SYS_CURRENCY_RATIO_INDIC)
                  AR_TRANSACTIONS(AR_TRAN_TOTAL_BASE)=CASH_RECEIPT_BATCHES(AR_TRAN_TOTAL_BASE)
            END_IF

            AR_TRANSACTIONS(AR_TRAN_TOTAL_CURRENCY) = CASH_RECEIPT_BATCHES(AR_TRAN_TOTAL_CURRENCY)

            AR_TRANSACTIONS(CONTROL_ACCOUNT_NUMBER)   = #AR_FULL_ACCOUNT
            AR_TRANSACTIONS(CONTROL_SHORT_CODE) = #AR_SHORT_CODE

            ADD TO AR_TRANSACTIONS
            IF (%STATUS <> %SUCCESS) EXIT(%FAILURE)
      END_BLOCK

      BEGIN_BLOCK UPDATE_CUSTOMER
            FIND IN CUSTOMERS &
                  /LOCK=WRITE &
                  /WITH=COMPANY_CODE=#COMPANY_CODE &
                  /WITH=DIVISION=#DIVISION &
                  /WITH=CUSTOMER_NUMBER=AR_TRANSACTIONS(CUSTOMER_NUMBER)

            IF (%STATUS = %FAILURE)
                  MESSAGE/IDENTIFIER/BELL/WAIT P_22099
            END_IF
            CUSTOMERS(LAST_CASH_RECEIPT) = %TODAY
      END_BLOCK

      BEGIN_BLOCK CREATE_GL_POSTINGS
            PERFORM MAKE_GL_POSTINGS
            IF    (%STATUS = %FAILURE) EXIT(%FAILURE)
      END_BLOCK

      BEGIN_BLOCK FINAL_UPDATE_NON_AR

            IF    (CASH_RECEIPT_BATCHES(CUSTOMER_NUMBER) = #CASH_SALES)
                  CASH_RECEIPT_BATCHES(AR_ALLOCATION_CURRENCY) = &
                                    CASH_RECEIPT_BATCHES(AR_TRAN_TOTAL_CURRENCY)
                  CASH_RECEIPT_BATCHES(AR_ALLOCATION_BASE) = &
                                    CASH_RECEIPT_BATCHES(AR_TRAN_TOTAL_BASE)

                  CASH_RECEIPT_BATCH_HEADERS(BATCH_CR_TOTAL) = &
                        CASH_RECEIPT_BATCH_HEADERS(BATCH_CR_TOTAL) - &
                                    CASH_RECEIPT_BATCHES(AR_TRAN_TOTAL_CURRENCY)

                  PERFORM CREATE_TAX_TRANSACTION
            END_IF
      END_BLOCK

END_FORM


PROCEDURE_FORM CREATE_TAX_TRANSACTION &
      /TABLE=CASH_RECEIPT_TAX_DETAILS &
      /WITH=CR_BATCH_NUMBER=CASH_RECEIPT_BATCHES(CR_BATCH_NUMBER) &
      /WITH=CR_BATCH_SEQ_NUMBER=CASH_RECEIPT_BATCHES(CR_BATCH_SEQ_NUMBER)


      BEGIN_BLOCK TAX_TRANSACTION_ADD

            CLEAR_BUFFER TAX_TRANSACTIONS

            TAX_TRANSACTIONS(COMPANY_CODE)           = #COMPANY_CODE
            TAX_TRANSACTIONS(DIVISION)               = #DIVISION
            TAX_TRANSACTIONS(SOURCE_MODULE)          = (PARAMETER("MODULE_AR"))
            TAX_TRANSACTIONS(TRANSACTION_TYPE)       = (PARAMETER("TTYPE_CR"))
            TAX_TRANSACTIONS(TAX_TRANSACTION_NUMBER) = CASH_RECEIPT_BATCHES(CR_BATCH_NUMBER)
            TAX_TRANSACTIONS(TRANSACTION_LINE_NUMBER)= CASH_RECEIPT_BATCHES(CR_BATCH_SEQ_NUMBER)
            TAX_TRANSACTIONS(SEQUENCE)           = CASH_RECEIPT_TAX_DETAILS(TRANSACTION_LINE_NUMBER)
            TAX_TRANSACTIONS(CUSTOMER_NUMBER)        = CASH_RECEIPT_BATCHES(CUSTOMER_NUMBER)
            TAX_TRANSACTIONS(CUSTOMER_TAX_CODE)        = CASH_RECEIPT_TAX_DETAILS(CUSTOMER_TAX_CODE)
            TAX_TRANSACTIONS(PRODUCT_TAX_CODE)   = CASH_RECEIPT_TAX_DETAILS(PRODUCT_TAX_CODE)
            TAX_TRANSACTIONS(PERIOD)                 = CASH_RECEIPT_BATCH_HEADERS(PERIOD)
            TAX_TRANSACTIONS(TRANSACTION_DATE)       = CASH_RECEIPT_BATCHES(TRANSACTION_DATE)
            TAX_TRANSACTIONS(SYS_TRAN_TOTAL_CURRENCY)= CASH_RECEIPT_TAX_DETAILS(AR_TRAN_TOTAL_CURRENCY)
            TAX_TRANSACTIONS(SYS_TAX_CURRENCY)       = CASH_RECEIPT_TAX_DETAILS(TAX)
            TAX_TRANSACTIONS(YEAR)                   = CASH_RECEIPT_BATCH_HEADERS(YEAR)
            TAX_TRANSACTIONS(SOURCE_REFERENCE)       = CASH_RECEIPT_BATCHES(CUSTOMER_REFERENCE)
            TAX_TRANSACTIONS(SYS_CURRENCY_CODE)  = CASH_RECEIPT_BATCHES(SYS_CURRENCY_CODE)
            TAX_TRANSACTIONS(WAREHOUSE)          = CASH_RECEIPT_TAX_DETAILS(WAREHOUSE)
            TAX_TRANSACTIONS(PART_CODE)          = CASH_RECEIPT_TAX_DETAILS(PART_CODE)
            TAX_TRANSACTIONS(SYS_CURRENCY_RATE)  = CASH_RECEIPT_BATCHES(SYS_CURRENCY_RATE)
            TAX_TRANSACTIONS(SYS_CURRENCY_RATIO_INDIC)= CASH_RECEIPT_BATCHES(SYS_CURRENCY_RATIO_INDIC)

            IF (#CURRENCY_METHOD > '0')
                  IF (TAX_TRANSACTIONS(SYS_CURRENCY_RATIO_INDIC) = (PARAMETER("MULTIPLY_RATIO_INDIC")))
                        TAX_TRANSACTIONS(SYS_TRAN_TOTAL_BASE) = ROUND(TAX_TRANSACTIONS(SYS_TRAN_TOTAL_CURRENCY) * &
                                    TAX_TRANSACTIONS(SYS_CURRENCY_RATE),#BASE_CURRENCY_DECIMAL)
                        TAX_TRANSACTIONS(SYS_TAX_BASE) = ROUND(TAX_TRANSACTIONS(SYS_TAX_CURRENCY) * &
                                    TAX_TRANSACTIONS(SYS_CURRENCY_RATE),#BASE_CURRENCY_DECIMAL)
                  ELSE
                        TAX_TRANSACTIONS(SYS_TRAN_TOTAL_BASE) = ROUND(TAX_TRANSACTIONS(SYS_TRAN_TOTAL_CURRENCY) / &
                                    TAX_TRANSACTIONS(SYS_CURRENCY_RATE),#BASE_CURRENCY_DECIMAL)
                        TAX_TRANSACTIONS(SYS_TAX_BASE) = ROUND(TAX_TRANSACTIONS(SYS_TAX_CURRENCY) / &
                                    TAX_TRANSACTIONS(SYS_CURRENCY_RATE),#BASE_CURRENCY_DECIMAL)
                  END_IF
            END_IF

            ADD TO TAX_TRANSACTIONS

            IF  (%STATUS = %FAILURE)
                MESSAGE/IDENTIFIER/BELL/WAIT P_00822
                EXIT
            END_IF
      END_BLOCK

END_FORM


TABLE_FORM SHOW_BATCH_LINES /ROW=7 /COL=2 /HEIGHT=17 /WIDTH=78 &
      /REMAIN &
      /TITLE=(MESSAGE("P_00222")) &
      /OPTIONS=NOMODIFY,NOINSERT,NODELETE &
      /TABLE=CASH_RECEIPT_BATCHES,CASH_RECEIPT_BATCH_HEADERS &
      /ROW_HEIGHT=2 &
      /WITH=COMPANY_CODE=#COMPANY_CODE &
      /WITH=DIVISION = #DIVISION &
      /WITH=CR_BATCH_NUMBER AMONG #BATCH_NUMBERS &
      /WITH=CASH_RECEIPT_BATCH_HEADERS(STATUS_FLAG) <> (PARAMETER("STATUS_APPROVE")) &
      /WITH=CASH_RECEIPT_BATCH_HEADERS(STATUS_FLAG) = (PARAMETER("STATUS_UPDATE")) &
      /SORTED_BY=(CR_BATCH_NUMBER)


      OUTPUT_BLOCK CR_BATCH_NUMBER /ROW=1 /COL=3 &
                  /SOURCE=(CASH_RECEIPT_BATCHES(CR_BATCH_NUMBER)) &
                  /HEADING=FIELD_HEADING(CR_BATCH_NUMBER)

      BEGIN_BLOCK  /DISPLAY_ONLY DISP_CUSTOMER
            FIND IN CUSTOMERS &
                  /LOCK=NONE &
                  /WITH=COMPANY_CODE=#COMPANY_CODE &
                  /WITH=DIVISION=#DIVISION &
                  /WITH=CUSTOMER_NUMBER=CASH_RECEIPT_BATCHES(CUSTOMER_NUMBER)
      END_BLOCK

      OUTPUT_BLOCK CR_BATCH_SEQ_NUMBER /ROW=1 /COL=10 &
                  /SOURCE=(CASH_RECEIPT_BATCHES(CR_BATCH_SEQ_NUMBER)) &
                  /HEADING=FIELD_HEADING(CR_BATCH_SEQ_NUMBER)

      OUTPUT_BLOCK CUSTOMER_NUMBER /ROW=1 /COL=15 &
                  /SOURCE=(CASH_RECEIPT_BATCHES(CUSTOMER_NUMBER)) &
                  /HEADING=FIELD_HEADING(CUSTOMER_NUMBER)

      OUTPUT_BLOCK REC_DATE /ROW=1 /COL=24 &
                  /SOURCE=(CASH_RECEIPT_BATCHES(TRANSACTION_DATE)) &
                  /HEADING=FIELD_HEADING(TRANSACTION_DATE)

      OUTPUT_BLOCK CASH_RECEIPT_TYPE /ROW=1 /COL=36 &
                  /DOMAIN=CASH_RECEIPT_TYPES &
                  /SOURCE=(CASH_RECEIPT_BATCHES(CASH_RECEIPT_TYPE)) &
                  /HEADING=FIELD_HEADING(CASH_RECEIPT_TYPE)

      BEGIN_BLOCK  /DISPLAY_ONLY GET_MASK
            FIND IN SYS_CURRENCY_CODES &
                  /LOCK=NONE &
                  /WITH=SYS_CURRENCY_CODE = CASH_RECEIPT_BATCHES(SYS_CURRENCY_CODE)

            #CURRENCY_MASK = SYS_CURRENCY_CODES(SYS_CURRENCY_MASK)
      END_BLOCK

      OUTPUT_BLOCK CASH_DISCOUNT /ROW=1 /COL=40 &
                  /SOURCE=(CASH_RECEIPT_BATCHES(CASH_DISCOUNT)) &
                  /RHEADING=FIELD_HEADING(CASH_DISCOUNT) &
                  /OUTPUT_MASK=(#CURRENCY_MASK)

      OUTPUT_BLOCK REC_AMOUNT /ROW=1 /COL=55 /LEN=(#CURRENCY_LEN) &
                  /SOURCE=(CASH_RECEIPT_BATCHES(AR_TRAN_TOTAL_CURRENCY)) &
                  /RHEADING=FIELD_HEADING(AR_TRAN_TOTAL_CURRENCY) &
                  /OUTPUT_MASK=(#CURRENCY_MASK)

      OUTPUT_BLOCK SYS_CURRENCY_CODE /ROW=1 /COL=71 &
                  /SOURCE=(CASH_RECEIPT_BATCHES(SYS_CURRENCY_CODE)) &
                  /HEADING=FIELD_HEADING(SYS_CURRENCY_CODE)

      OUTPUT_BLOCK CUSTOMER_NAME /ROW=2 /COL=7 &
                  /SOURCE=(CUSTOMERS(CUSTOMER_NAME))

      OUTPUT_BLOCK CHECK_NUMBER /ROW=2 /COL=44 &
                  /PROMPT=(MESSAGE("P_00566")&":") &
                  /SOURCE=(CASH_RECEIPT_BATCHES(CUSTOMER_REFERENCE))

END_FORM

PROCEDURE_FORM TOTAL_UP &
            /TABLE=CASH_RECEIPT_BATCHES &
            /WITH=COMPANY_CODE=#COMPANY_CODE &
            /WITH=DIVISION=CASH_RECEIPT_BATCH_HEADERS(DIVISION) &
            /WITH=CR_BATCH_NUMBER = CASH_RECEIPT_BATCH_HEADERS(CR_BATCH_NUMBER) &
            /STATISTIC=#TOTAL_BATCH=TOTAL(CASH_RECEIPT_BATCHES(AR_TRAN_TOTAL_CURRENCY))

END_FORM

PROCEDURE_FORM CALL_FORMAT_SPLIT

      BEGIN_BLOCK CALL
            PERFORM "GEMLB:LB_TAX_FORMAT" ( &
                  (#COMPANY_CODE), &
                  (#AMOUNT_DR), &
                  (#AMOUNT_CR), &
                  (CASH_RECEIPT_TAX_DETAILS(AR_POSTING_FORMAT)), &
                  (""), &
                  (#CURRENCY_METHOD), &
                  (CASH_RECEIPT_BATCHES(SYS_CURRENCY_RATE)), &
                  (#BASE_CURRENCY_DECIMAL), &
                  (#CURRENCY_DECIMAL), &
                  (#CURRENCY_RATIO_INDIC), &
                  (""), &
                  (""))

      END_BLOCK

END_FORM

PROCEDURE_FORM CREATE_POSTINGS_FROM_GL_VT &
      /TABLE=GL_POSTINGS_VT

            FIND IN SYS_CURRENCY_CODES &
                  /LOCK=NONE &
                  /WITH=SYS_CURRENCY_CODE = CASH_RECEIPT_BATCHES(SYS_CURRENCY_CODE)

            #CURRENCY_CODE = CASH_RECEIPT_BATCHES(SYS_CURRENCY_CODE)
            #CURRENCY_DECIMAL = SYS_CURRENCY_CODES(SYS_CURRENCY_DECIMALS)
            #CURRENCY_RATIO_INDIC = CASH_RECEIPT_BATCHES(SYS_CURRENCY_RATIO_INDIC)
            #CURRENCY_RATE = CASH_RECEIPT_BATCHES(SYS_CURRENCY_RATE)
            CLEAR_BUFFER GL_POSTINGS

            GL_POSTINGS(COMPANY_CODE)            = #COMPANY_CODE
            GL_POSTINGS(DIVISION)                = CASH_RECEIPT_BATCHES(DIVISION)
            GL_POSTINGS(SOURCE_MODULE) = (PARAMETER("MODULE_AR"))
            GL_POSTINGS(POSTING_DATE)          = CASH_RECEIPT_BATCH_HEADERS(BANK_DATE)

            IF    (CASH_RECEIPT_BATCHES(CUSTOMER_NUMBER)=#CASH_SALES)
            GL_POSTINGS(POSTING_REFERENCE)=MESSAGE("P_00094",CASH_RECEIPT_BATCHES(CR_BATCH_NUMBER))
            ELSE
                  GL_POSTINGS(POSTING_REFERENCE) = #CASH_RECEIPT_NUMBER
            END_IF
            GL_POSTINGS(SOURCE_REFERENCE)            = CASH_RECEIPT_BATCHES(CUSTOMER_NUMBER)
            GL_POSTINGS(MODULE_TRANSACTION_TYPE) = (PARAMETER("TTYPE_CR"))

            GL_POSTINGS(GL_SHORT_CODE)           = GL_POSTINGS_VT(GL_SHORT_CODE)
            GL_POSTINGS(ACCOUNT_NUMBER)          = GL_POSTINGS_VT(ACCOUNT_NUMBER)
            GL_POSTINGS(BATCH_NUMBER)          = CASH_RECEIPT_BATCHES(CR_BATCH_NUMBER)
            GL_POSTINGS(PERIOD)                = CASH_RECEIPT_BATCH_HEADERS(PERIOD)
            GL_POSTINGS(YEAR)                  = CASH_RECEIPT_BATCH_HEADERS(YEAR)
            GL_POSTINGS(COST_CENTER)           = CASH_RECEIPT_BATCHES(COST_CENTER)

            GL_POSTINGS(POSTING_DESCRIPTION)     = GL_POSTINGS_VT(JOURNAL_DESCRIPTION)
            GL_POSTINGS(ACCOUNT_IDENT)           = GL_POSTINGS_VT(ACCOUNT_IDENT)
            GL_POSTINGS(SYS_CURRENCY_CODE)       = #CURRENCY_CODE
            GL_POSTINGS(SYS_CURRENCY_RATE)       = #CURRENCY_RATE
            GL_POSTINGS(SYS_CURRENCY_METHOD)     = #CURRENCY_METHOD
            GL_POSTINGS(SYS_CURRENCY_RATIO_INDIC)= #CURRENCY_RATIO_INDIC
            GL_POSTINGS(GL_POSTING_CURRENCY_DR)  = GL_POSTINGS_VT(GL_JOURNAL_VALUE_DR)
            GL_POSTINGS(GL_POSTING_CURRENCY_CR)  = GL_POSTINGS_VT(GL_JOURNAL_VALUE_CR)

            IF    (#CURRENCY_METHOD > '0')
                  GL_POSTINGS(SYS_BASE_CURRENCY_CODE) = #BASE_CURRENCY_CODE

                  GL_POSTINGS(GL_POSTING_BASE_DR) = GL_POSTINGS_VT(GL_JOURNAL_BASE_DR)
                  GL_POSTINGS(GL_POSTING_BASE_CR) =  GL_POSTINGS_VT(GL_JOURNAL_BASE_CR)
            ELSE
                  GL_POSTINGS(GL_POSTING_BASE_DR) = GL_POSTINGS_VT(GL_JOURNAL_VALUE_DR)
                  GL_POSTINGS(GL_POSTING_BASE_CR) =  GL_POSTINGS_VT(GL_JOURNAL_VALUE_CR)

            END_IF

            GL_POSTINGS(ACTIVATION_STATUS)            = (PARAMETER("STATUS_ACTIVE"))

            ADD TO GL_POSTINGS
            IF    (%STATUS = %FAILURE)
                  EXIT(%FAILURE)
            END_IF
      END_BLOCK
END_FORM

